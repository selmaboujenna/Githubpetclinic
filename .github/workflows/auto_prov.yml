on:
  push:
    branches:
      pets  
name: automate provisioning

jobs:
  build:
    env:
      ARM_CLIENT_ID: ${{secrets.CLIENT_ID}}
      ARM_SUBSCRIPTION_ID: ${{secretcs.SUBSCRIPTION_ID}}
      ARM_TENANT_ID: ${{secrets.TENANT_ID}}
      ARM_USE_MSI: "true"
    runs-on: self-hosted
    steps:
 
    # - name: az login
    #   uses: azure/login@v1
    #   with:
    #     auth-type: IDENTITY
    #     client-id: ${{secrets.CLIENT_ID}}
    #     tenant-id: ${{secrets.TENANT_ID}}
    #     subscription-id: ${{secrets.SUBSCRIPTION_ID}}

    - name: initialize terraform
      run: terraform init
      working-directory: terraform
    - name: create VMs
      run: terraform apply --auto-approve
      working-directory: terraform
  
  configure:
    needs: build
    runs-on: self-hosted
    steps:
    - name: checkout repo
      uses: actions/checkout@v4
    - name: maak een vault password file
      run: echo "${{secrets.VAULT_PASS}}" > /tmp/vault_pass.txt
    - name: run playbook
      run: ansible-playbook playbook.yml --vault-password-file /tmp/vault_pass.txt
    - name: verwijder vault pass
      run: rm /tmp/vault_pass.txt

  testing:
    needs: configure
    runs-on: self-hosted
    steps:
    - name: checkout repo 
      run: actions/checkout@v4
    - name: run playbook for testingVM
      run: ansible-playbook testingVM.yml

  acceptance:
    needs: testing
    runs-on: self-hosted
    steps:
    - name: run playbook for acceptanceVM
      run: ansible-playbook acceptance.yml

  production:
    needs: acceptance
    runs-on: self-hosted
    steps:
      - name: run playbook for productionVM
        run: ansible-playbook productionVM

